import java.util.regex.Matcher
import java.util.regex.Pattern

buildscript {
    def versionPatchAndNumber = 0

    ext.getCurrentFlavor = { ->
        Gradle gradle = getGradle()
        String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()

        Pattern pattern

        if (tskReqStr.contains("assemble"))
            pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
        else
            pattern = Pattern.compile("generate(\\w+)(Release|Debug)")

        Matcher matcher = pattern.matcher(tskReqStr)

        if (matcher.find())
            return matcher.group(1).toLowerCase()
        else {
            println "NO MATCH FOUND"
            return ""
        }
    }

    def versionPropsFile = file("app/version.properties")

    Properties versionProps = new Properties()

    versionProps.load(new FileInputStream(versionPropsFile))

    def versionMajor = 0
    def versionMinor = 0
    def versionPatch = versionProps["VERSION_PATCH"].toInteger() + versionPatchAndNumber
    def versionBuild = versionProps["VERSION_BUILD"].toInteger() + 1
    def versionNumber = versionProps["VERSION_NUMBER"].toInteger() + versionPatchAndNumber

    versionProps["VERSION_PATCH"] = versionPatch.toString()
    versionProps["VERSION_BUILD"] = versionBuild.toString()
    versionProps["VERSION_NUMBER"] = versionNumber.toString()

    versionProps.store(versionPropsFile.newWriter(), null)

    ext {
        // SDK
        compile_sdk_version = 29
        min_sdk_version = 21
        build_tools_version = "29.0.2"

        // App Version
        version_major = versionMajor
        version_minor = versionMinor
        version_patch = versionPatch
        version_build = versionBuild
        version_number = versionNumber

        // Gradle
        gradle_version = '4.0.0-alpha01'

        // Google Play Services
        google_play_services_version = "4.3.2"

        // AppCompat Version
        appcompat_version = "1.1.0"

        // Testing
        testing_legacy_support_version = "1.0.0"
        testing_junit_version = "4.12"
        testing_androidx_junit_version = "1.1.1"
        testing_espresso_version = "3.2.0"

        // Design
        design_constraint_layout_version = "1.1.3"
        design_recycler_view_version = "1.0.0"
        design_card_view_version = "1.0.0"
        design_material_version = '1.2.0-alpha01'

        // CircleImageView
        circle_image_view_version = "3.0.1"

        // Kotlin
        kotlin_version = "1.3.60-eap-25"

        // Coroutines
        coroutines_version = "1.3.2"

        // Anko
        anko_version = "0.10.8"

        // PullToRefresh
        p2r_version = "1.2.0"

        // RxJava2 + RxAndroid
        rx_java_version = "2.2.13"
        rx_android_version = "2.1.1"

        // Retrofit2 + Converter_GSON + Adapter_RxJava2
        retrofit_version = "2.6.2"

        // OkHTTP3
        ok_http_version = "4.2.2"

        // Jetpack
        androidx_preference_version = "1.1.0"

        // Glide
        glide_version = "4.10.0"

        // Lifecycle Extensions
        lifecycle_extensions_version = "2.1.0"

        // Dagger2
        dagger_version = '2.25.2'

        // Moxy-X
        moxy_x_version = "1.7.0"

        // Room
        room_version = '2.2.1'

        // Cicerone
        cicerone_version = "5.0.0"
    }

    repositories {
        google()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.gms:google-services:$google_play_services_version"


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
